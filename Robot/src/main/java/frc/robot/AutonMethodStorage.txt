This is storing the methods intended for auton outside of the class until they are ready to be reintroduced
    
    /** */
    public boolean rotateDriveAngle(double targetAngle, double target) {
        // flag for checking if the method is finished
        boolean isFinished = false;
        
        //The current encoder values
        double m_leftStartingEncoderValue = m_leftDriveEncoder.getQuadraturePosition();
        double m_rightStartingEncoderValue = m_rightDriveEncoder.getQuadraturePosition();

        if (m_rotController.getSetpoint() != targetAngle) {
            //Resets the error
            m_rotController.reset();

            //Sets the target to our target angle
            m_rotController.setSetpoint(targetAngle);
        }

        //Sets our rotate speed to the return of the PID
        double returnedRotate = m_rotController.calculate(m_gyro.getOffsetYaw());

        System.out.println("Returned Rotate: \t" + returnedRotate);

        //Runs the drivetrain with an auto speed of 0.2, and a rotate speed set by the PID
        arcadeDrive(RobotMap.AUTO_SPEED, returnedRotate);

        //TODO: Redue this section-Grab encoder value on first entry(target angle is changed)-get whether going forward or backward-drive forward or backward at set speed until if difference is equal to target distance then stop moving and feed in rotate to get setangle
        /////////////////////////////////////////////////////

        if((m_leftStartingEncoderValue - m_leftDriveEncoder.getQuadraturePosition() > target) && (m_rightStartingEncoderValue - m_rightDriveEncoder.getQuadraturePosition() > target) ){
            arcadeDrive(RobotMap.AUTO_SPEED, 0);
            isFinished = false;
        } else {
            arcadeDrive(0, returnedRotate);
            isFinished = true;
        }

        /**
         * If (target angle has changed){
         * Get forward or backward
         * If(starting encoder value - current encoder value > target distance){
         * drive forward/backward 
         * isFinished = false;
         * }
         * else {
         * stop moving and rotate to getSetAngle
         * isFinished = true;
         * }
         * 
         * }
         */
        ///////////////////////////////////////////////////////
        
        //isFinished acts as an exit flag once we have fulfilled the condiions desired
        return isFinished;
    }
